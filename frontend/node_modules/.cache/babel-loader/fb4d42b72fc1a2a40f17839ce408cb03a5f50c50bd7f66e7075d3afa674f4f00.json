{"ast":null,"code":"import { apiSlice } from './apiSlice';\nimport { ORDERS_URL, STRIPE_URL } from '../constants';\nexport const ordersApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    createOrder: builder.mutation({\n      query: order => ({\n        url: ORDERS_URL,\n        method: 'POST',\n        credentials: 'include',\n        body: {\n          ...order\n        }\n      })\n    }),\n    getOrderDetails: builder.query({\n      query: orderId => ({\n        url: `${ORDERS_URL}/${id}`,\n        credentials: 'include'\n      }),\n      keepUnusedDataFor: 5\n    }),\n    payOrder: builder.mutation({\n      query: ({\n        orderId,\n        details\n      }) => ({\n        url: `${ORDERS_URL}/${orderId}/pay`,\n        method: 'PUT',\n        credentials: 'include',\n        body: {\n          ...details\n        }\n      })\n    }),\n    createPaymentIntent: builder.mutation({\n      query: () => ({\n        url: `${STRIPE_URL}`,\n        method: 'POST',\n        credentials: 'include'\n      }),\n      keepUnusedDataFor: 5\n    })\n  })\n});\nexport const {\n  useCreateOrderMutation,\n  useGetOrderDetailsQuery,\n  usePayOrderMutation,\n  useCreatePaymentIntentMutation\n} = ordersApiSlice;","map":{"version":3,"names":["apiSlice","ORDERS_URL","STRIPE_URL","ordersApiSlice","injectEndpoints","endpoints","builder","createOrder","mutation","query","order","url","method","credentials","body","getOrderDetails","orderId","id","keepUnusedDataFor","payOrder","details","createPaymentIntent","useCreateOrderMutation","useGetOrderDetailsQuery","usePayOrderMutation","useCreatePaymentIntentMutation"],"sources":["/Users/mac/Afriqana/frontend/src/slices/ordersApiSlice.js"],"sourcesContent":["import { apiSlice } from './apiSlice';\nimport { ORDERS_URL, STRIPE_URL } from '../constants';\n\nexport const ordersApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        createOrder: builder.mutation({\n            query: (order) => ({\n                url: ORDERS_URL,\n                method: 'POST',\n                credentials: 'include',\n                body: {...order},\n            }),\n        }),\n        getOrderDetails: builder.query({\n            query: (orderId) => ({\n                url: `${ORDERS_URL}/${id}`,\n                credentials: 'include'\n            }),\n            keepUnusedDataFor: 5\n        }),\n        payOrder: builder.mutation({\n            query: ({orderId, details}) => ({\n                url: `${ORDERS_URL}/${orderId}/pay`,\n                method: 'PUT',\n                credentials: 'include',\n                body: {...details},\n            }) \n        }),\n        createPaymentIntent: builder.mutation({\n            query: () => ({\n                url: `${STRIPE_URL}`,\n                method: 'POST',\n                credentials: 'include'\n            }),\n            keepUnusedDataFor: 5,\n        }),\n    }), \n\n    \n});\n\nexport const { useCreateOrderMutation, useGetOrderDetailsQuery, usePayOrderMutation, useCreatePaymentIntentMutation } = ordersApiSlice;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,UAAU,EAAEC,UAAU,QAAQ,cAAc;AAErD,OAAO,MAAMC,cAAc,GAAGH,QAAQ,CAACI,eAAe,CAAC;EACnDC,SAAS,EAAGC,OAAO,KAAM;IACrBC,WAAW,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,KAAK,KAAM;QACfC,GAAG,EAAEV,UAAU;QACfW,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAE;UAAC,GAAGJ;QAAK;MACnB,CAAC;IACL,CAAC,CAAC;IACFK,eAAe,EAAET,OAAO,CAACG,KAAK,CAAC;MAC3BA,KAAK,EAAGO,OAAO,KAAM;QACjBL,GAAG,EAAG,GAAEV,UAAW,IAAGgB,EAAG,EAAC;QAC1BJ,WAAW,EAAE;MACjB,CAAC,CAAC;MACFK,iBAAiB,EAAE;IACvB,CAAC,CAAC;IACFC,QAAQ,EAAEb,OAAO,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAEA,CAAC;QAACO,OAAO;QAAEI;MAAO,CAAC,MAAM;QAC5BT,GAAG,EAAG,GAAEV,UAAW,IAAGe,OAAQ,MAAK;QACnCJ,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAE;UAAC,GAAGM;QAAO;MACrB,CAAC;IACL,CAAC,CAAC;IACFC,mBAAmB,EAAEf,OAAO,CAACE,QAAQ,CAAC;MAClCC,KAAK,EAAEA,CAAA,MAAO;QACVE,GAAG,EAAG,GAAET,UAAW,EAAC;QACpBU,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE;MACjB,CAAC,CAAC;MACFK,iBAAiB,EAAE;IACvB,CAAC;EACL,CAAC;AAGL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,sBAAsB;EAAEC,uBAAuB;EAAEC,mBAAmB;EAAEC;AAA+B,CAAC,GAAGtB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}