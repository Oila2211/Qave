{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Afriqana/frontend/src/screens/OrderScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem } from \"react-bootstrap\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-toastify\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { useGetOrderDetailsQuery, usePayOrderMutation, useGetStripeKeyQuery } from \"../slices/ordersApiSlice\";\nimport { useSelector } from \"react-redux\";\n\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n// if (stripeKey && stripeKey !== process.env.REACT_APP_STRIPE_PUBLIC_KEY) {\n//     stripe = loadStripe(stripeKey);\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderScreen = () => {\n  _s();\n  const {\n    id: orderId\n  } = useParams();\n  const elements = useElements();\n  const {\n    data: order,\n    refetch,\n    isLoading,\n    error\n  } = useGetOrderDetailsQuery(orderId);\n  const [payOrder, {\n    isLoading: loadingPay\n  }] = usePayOrderMutation();\n\n  // const stripeInside = useStripe();\n\n  const {\n    data: stripeKey,\n    isLoading: loadingStripeKey,\n    error: errorStripeKey\n  } = useGetStripeKeyQuery();\n  const [stripe, setStripe] = useState(null);\n  useEffect(() => {\n    const initializeStripe = async () => {\n      if (stripeKey && typeof stripeKey === 'string') {\n        const stripeInstance = await loadStripe(stripeKey);\n        setStripe(stripeInstance);\n      } else if (stripeKey && stripeKey.key) {\n        const stripeInstance = await loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n        setStripe(stripeInstance);\n      } else {\n        console.error(\"Stripe key is missing!\");\n      }\n    };\n    initializeStripe();\n  }, [stripeKey]);\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  const handlePayment = async () => {\n    if (!stripe || !elements) {\n      toast.error(\"Stripe hasn't loaded yet. Please wait a moment.\");\n      return;\n    }\n    if (!stripe || !elements) {\n      console.log(\"Stripe or elements not ready\");\n      return;\n    }\n    const card = elements.getElement(CardElement);\n    if (!card) {\n      console.log(\"CardElement not ready or not found\");\n      return;\n    }\n    const result = await stripe.createToken(card);\n    if (result.error) {\n      // Inform the customer that there was an error.\n      toast.error(result.error.message);\n    } else {\n      const paymentData = {\n        id: result.token.id,\n        status: 'completed',\n        update_time: new Date().toISOString(),\n        // You can customize this\n        payer: {\n          email_address: userInfo.email\n        }\n      };\n      await payOrder({\n        orderId,\n        details: paymentData\n      });\n      refetch();\n      // Send the token to your server (this is where you would call your API to charge the card).\n      // You've mentioned a usePayOrderMutation, so you'd use that here with the token as an argument.\n      // payOrder(result.token);\n    }\n  };\n\n  // Render logic to improve readability.\n  if (isLoading || loadingStripeKey) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 47\n  }, this);\n  if (error || errorStripeKey) return /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error || errorStripeKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 12\n  }, this);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 17\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 40\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), \" \", order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this), \" \", order.user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this), \" \", order.deliveryAddress.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Delivered on \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Delivered \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"SEK\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"SEK\", order.deliveryPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"SEK\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"SEK\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), !order.isPaid && stripe && !loadingStripeKey ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Elements, {\n                stripe: stripe,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: handlePayment,\n                    style: {\n                      marginTop: \"10px\"\n                    },\n                    children: loadingPay ? \"Processing...\" : \"Pay Now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(OrderScreen, \"UXGdrsyVmUfU0sYeq+jt5gjw+64=\", false, function () {\n  return [useParams, useElements, useGetOrderDetailsQuery, usePayOrderMutation, useGetStripeKeyQuery, useSelector];\n});\n_c = OrderScreen;\nexport default OrderScreen;\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useCreateOrderMutation } from '../slices/ordersApiSlice'; \n// import { useNavigate } from 'react-router-dom';\n// import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\n// const PlaceOrderScreen = () => {\n//     const dispatch = useDispatch();\n//     const navigate = useNavigate();\n\n//     const cart = useSelector(state => state.cart);  // assuming you have cart details in your redux store\n//     const { cartItems, deliveryAddress, paymentMethod, itemsPrice, taxPrice, deliveryPrice, totalPrice } = cart;\n\n//     const [createOrder] = useCreateOrderMutation();\n\n//     const stripe = useStripe();\n//     const elements = useElements();\n\n//     const placeOrderHandler = async () => {\n//         if (!stripe || !elements) {\n//             return;\n//         }\n//         const card = elements.getElement(CardElement);\n//         const result = await stripe.createToken(card);\n//         if (result.error) {\n//             console.error(result.error.message);\n//         } else {\n//             try {\n//                 await createOrder({\n//                     orderItems: cartItems,\n//                     deliveryAddress,\n//                     paymentMethod,\n//                     itemsPrice,\n//                     taxPrice,\n//                     deliveryPrice,\n//                     totalPrice,\n//                     stripeToken: result.token.id\n//                 });\n//                 navigate.push('/order-success');  // navigate to a successful order screen or confirmation screen\n//             } catch (error) {\n//                 console.error(\"Error placing the order:\", error);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Place Order</h1>\n//             <div>\n//                 <h2>Order Items</h2>\n//                 {cartItems.map(item => (\n//                     <div key={item._id}>\n//                         {item.name} - {item.price}\n//                     </div>\n//                 ))}\n//             </div>\n//             <div>\n//                 <h2>Summary</h2>\n//                 <p>Items Price: ${itemsPrice}</p>\n//                 <p>Tax: ${taxPrice}</p>\n//                 <p>Delivery: ${deliveryPrice}</p>\n//                 <p><strong>Total: ${totalPrice}</strong></p>\n//             </div>\n//             <div>\n//                 <h2>Payment</h2>\n//                 <Elements stripe={stripePromise}>\n//                     <CardElement />\n//                     <button onClick={placeOrderHandler}>Pay Now</button>\n//                 </Elements>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default PlaceOrderScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["useEffect","useState","Link","useParams","Row","Col","ListGroup","Image","Form","Button","Card","ListGroupItem","loadStripe","Elements","CardElement","useStripe","useElements","toast","Message","Loader","useGetOrderDetailsQuery","usePayOrderMutation","useGetStripeKeyQuery","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderScreen","_s","id","orderId","elements","data","order","refetch","isLoading","error","payOrder","loadingPay","stripeKey","loadingStripeKey","errorStripeKey","stripe","setStripe","initializeStripe","stripeInstance","key","process","env","REACT_APP_STRIPE_PUBLIC_KEY","console","userInfo","state","auth","handlePayment","log","card","getElement","result","createToken","message","paymentData","token","status","update_time","Date","toISOString","payer","email_address","email","details","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","_id","md","Item","user","name","deliveryAddress","address","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","orderItems","map","item","index","src","image","alt","fluid","rounded","to","product","qty","price","itemsPrice","deliveryPrice","taxPrice","totalPrice","style","marginBottom","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/mac/Afriqana/frontend/src/screens/OrderScreen.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem } from \"react-bootstrap\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { toast } from \"react-toastify\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { useGetOrderDetailsQuery, usePayOrderMutation, useGetStripeKeyQuery } from \"../slices/ordersApiSlice\";\nimport { useSelector } from \"react-redux\";\n\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n// if (stripeKey && stripeKey !== process.env.REACT_APP_STRIPE_PUBLIC_KEY) {\n//     stripe = loadStripe(stripeKey);\n// }\n\nconst OrderScreen = () => {\n\n    const { id: orderId } = useParams();\n    const elements = useElements()\n\n    const { data: order, refetch, isLoading, error } = \n    useGetOrderDetailsQuery(orderId);\n\n    const [payOrder, { isLoading: loadingPay }] =usePayOrderMutation();\n\n    // const stripeInside = useStripe();\n\n\n    const { data: stripeKey, isLoading: loadingStripeKey, error: errorStripeKey } = useGetStripeKeyQuery();\n    \n    const [stripe, setStripe] = useState(null);\n\n    useEffect(() => {\n\n        const initializeStripe = async () => {\n            if (stripeKey && typeof stripeKey === 'string') {\n                const stripeInstance = await loadStripe(stripeKey);\n                setStripe(stripeInstance);\n            } else if (stripeKey && stripeKey.key) {\n                const stripeInstance = await loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n                setStripe(stripeInstance);\n            } else {\n                console.error(\"Stripe key is missing!\");\n            }\n        };\n        \n    \n        initializeStripe();\n    }, [stripeKey]);\n\n\n    const { userInfo } = useSelector((state) => (state.auth))\n\n    const handlePayment = async () => {\n        if (!stripe || !elements) {\n            toast.error(\"Stripe hasn't loaded yet. Please wait a moment.\");\n            return;\n        }\n        \n        if (!stripe || !elements) {\n            console.log(\"Stripe or elements not ready\");\n            return;\n        }\n\n        const card = elements.getElement(CardElement);\n        if (!card) {\n            console.log(\"CardElement not ready or not found\");\n            return;\n        }\n                \n        const result = await stripe.createToken(card);\n\n        if (result.error) {\n            // Inform the customer that there was an error.\n            toast.error(result.error.message);\n        } else {\n\n            const paymentData = {\n                id: result.token.id,\n                status: 'completed',\n                update_time: new Date().toISOString(), // You can customize this\n                payer: {\n                    email_address: userInfo.email\n                }\n            };\n            await payOrder({ orderId, details: paymentData });\n            refetch();\n            // Send the token to your server (this is where you would call your API to charge the card).\n            // You've mentioned a usePayOrderMutation, so you'd use that here with the token as an argument.\n            // payOrder(result.token);\n        }\n\n\n    }\n\n    // Render logic to improve readability.\n    if (isLoading || loadingStripeKey) return <Loader />;\n    if (error || errorStripeKey) \n    return <Message variant=\"danger\">{error || errorStripeKey}</Message>;\n\n  return (\n    isLoading ? <Loader /> : error ? ( <Message variant=\"danger\"/> )\n    : (\n        <>\n        <h1>Order {order._id}</h1>\n        <Row>\n            <Col md={8}>\n                <ListGroup>\n                    <ListGroup.Item>\n                        <h2>Delivery</h2>\n                        <p>\n                            <strong>Name:</strong> {order.user.name}\n                        </p>\n                        <p>\n                            <strong>Email:</strong> {order.user.email}\n                        </p>\n                        <p>\n                            <strong>Address:</strong> {order.deliveryAddress.address}\n                        </p>\n\n                        {order.isDelivered ? (\n                            <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\n                        ) : (\n                            <Message variant=\"danger\">Not Delivered </Message>\n                        )}\n\n                    </ListGroup.Item>\n\n                   <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <p>\n                            <strong>Method:</strong>\n                            {order.paymentMethod}\n                        </p>\n                        {order.isPaid ? (\n                            <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                        ) : (\n                            <Message variant=\"danger\">Not Paid </Message>\n                        )}\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                        <h2>Order Items</h2>\n                        <ListGroup variant='flush'>\n                            {order.orderItems.map((item, index) => (\n                                <ListGroup.Item key={index}>\n                                    <Row>\n                                    <Col md={1}>\n                                        <Image\n                                        src={item.image}\n                                        alt={item.name}\n                                        fluid\n                                        rounded\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <Link to={`/product/${item.product}`}>\n                                        {item.name}\n                                        </Link>\n                                    </Col>\n                                    <Col md={4}>\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\n                                    </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n            \n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Order Summary</h2>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Items</Col>\n                                <Col>SEK{order.itemsPrice}</Col>\n                            </Row>\n\n                            <Row>\n                                <Col>Delivery</Col>\n                                <Col>SEK{order.deliveryPrice}</Col>\n                            </Row>\n\n                            <Row>\n                                <Col>Tax</Col>\n                                <Col>SEK{order.taxPrice}</Col>\n                            </Row>\n\n                            <Row>\n                                <Col><strong>Total</strong></Col>\n                                <Col>SEK{order.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        {/* PAY ORDER PLACEHOLDER */}\n                        {!order.isPaid && stripe && !loadingStripeKey ? (\n                                    <ListGroup.Item>\n                                        <Elements stripe={stripe}>\n                                            <div style={{ marginBottom: \"20px\" }}>\n                                                <CardElement />\n                                                <Button onClick={handlePayment} style={{ marginTop: \"10px\" }}>\n                                                    {loadingPay ? \"Processing...\":\"Pay Now\"}\n                                                </Button>\n                                            </div>\n                                        </Elements>\n                                    </ListGroup.Item>\n                                ) : null} \n                        \n                        \n                        {/* MARK AS DELIVERED PLACEHOLDER */ }\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n        </>\n    )\n  );\n}\n\nexport default OrderScreen;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useCreateOrderMutation } from '../slices/ordersApiSlice'; \n// import { useNavigate } from 'react-router-dom';\n// import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n\n// const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\n// const PlaceOrderScreen = () => {\n//     const dispatch = useDispatch();\n//     const navigate = useNavigate();\n    \n//     const cart = useSelector(state => state.cart);  // assuming you have cart details in your redux store\n//     const { cartItems, deliveryAddress, paymentMethod, itemsPrice, taxPrice, deliveryPrice, totalPrice } = cart;\n    \n//     const [createOrder] = useCreateOrderMutation();\n\n//     const stripe = useStripe();\n//     const elements = useElements();\n\n//     const placeOrderHandler = async () => {\n//         if (!stripe || !elements) {\n//             return;\n//         }\n//         const card = elements.getElement(CardElement);\n//         const result = await stripe.createToken(card);\n//         if (result.error) {\n//             console.error(result.error.message);\n//         } else {\n//             try {\n//                 await createOrder({\n//                     orderItems: cartItems,\n//                     deliveryAddress,\n//                     paymentMethod,\n//                     itemsPrice,\n//                     taxPrice,\n//                     deliveryPrice,\n//                     totalPrice,\n//                     stripeToken: result.token.id\n//                 });\n//                 navigate.push('/order-success');  // navigate to a successful order screen or confirmation screen\n//             } catch (error) {\n//                 console.error(\"Error placing the order:\", error);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Place Order</h1>\n//             <div>\n//                 <h2>Order Items</h2>\n//                 {cartItems.map(item => (\n//                     <div key={item._id}>\n//                         {item.name} - {item.price}\n//                     </div>\n//                 ))}\n//             </div>\n//             <div>\n//                 <h2>Summary</h2>\n//                 <p>Items Price: ${itemsPrice}</p>\n//                 <p>Tax: ${taxPrice}</p>\n//                 <p>Delivery: ${deliveryPrice}</p>\n//                 <p><strong>Total: ${totalPrice}</strong></p>\n//             </div>\n//             <div>\n//                 <h2>Payment</h2>\n//                 <Elements stripe={stripePromise}>\n//                     <CardElement />\n//                     <button onClick={placeOrderHandler}>Pay Now</button>\n//                 </Elements>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default PlaceOrderScreen;\n"],"mappings":"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A;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACJ,CACL;AAEL,CAAC;AAAA9C,EAAA,CAhNKD,WAAW;EAAA,QAEWzB,SAAS,EAChBa,WAAW,EAG5BI,uBAAuB,EAEsBC,mBAAmB,EAKgBC,oBAAoB,EAuB/EC,WAAW;AAAA;AAAAwF,EAAA,GApC9BnF,WAAW;AAkNjB,eAAeA,WAAW;;AAI1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}