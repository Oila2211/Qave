{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Afriqana/frontend/src/screens/ProductCatalogScreen.jsx\",\n  _s = $RefreshSig$();\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { useGetProductsQuery } from '../slices/productsApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductCatalogScreen = () => {\n  _s();\n  var _error$data;\n  const {\n    data: products,\n    isLoading,\n    error\n  } = useGetProductsQuery();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Order Online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Product, {\n            product: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(ProductCatalogScreen, \"QVPTGUAAs1th9UKDCiWRDCYbigw=\", false, function () {\n  return [useGetProductsQuery];\n});\n_c = ProductCatalogScreen;\nexport default ProductCatalogScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductCatalogScreen\");","map":{"version":3,"names":["Row","Col","Product","Loader","Message","useGetProductsQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductCatalogScreen","_s","_error$data","data","products","isLoading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","message","map","product","sm","md","lg","xl","_id","_c","$RefreshReg$"],"sources":["/Users/mac/Afriqana/frontend/src/screens/ProductCatalogScreen.jsx"],"sourcesContent":["import { Row, Col} from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { useGetProductsQuery } from '../slices/productsApiSlice';\n\n\n\nconst ProductCatalogScreen = () => {\n  const { data: products, isLoading, error } = useGetProductsQuery();\n\n\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader/>\n      ): error ? (\n        <Message variant='danger'>\n          {error?.data?.message || error.error}\n          </Message>\n      ) : (\n        <>\n        <h1>Order Online</h1>\n        <Row>\n            {products.map((product) => (\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product}/>\n                </Col>\n            ))}\n        </Row>\n        </>\n      )}\n\n    </>\n  )\n}\n\nexport default ProductCatalogScreen"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,GAAG,QAAO,iBAAiB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIjE,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACjC,MAAM;IAAEC,IAAI,EAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGX,mBAAmB,CAAC,CAAC;EAIlE,oBACEE,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGF,SAAS,gBACRR,OAAA,CAACJ,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GACRL,KAAK,gBACNT,OAAA,CAACH,OAAO;MAACkB,OAAO,EAAC,QAAQ;MAAAL,QAAA,EACtB,CAAAD,KAAK,aAALA,KAAK,wBAAAJ,WAAA,GAALI,KAAK,CAAEH,IAAI,cAAAD,WAAA,uBAAXA,WAAA,CAAaW,OAAO,KAAIP,KAAK,CAACA;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAEZd,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACAV,OAAA;QAAAU,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBd,OAAA,CAACP,GAAG;QAAAiB,QAAA,EACCH,QAAQ,CAACU,GAAG,CAAEC,OAAO,iBAClBlB,OAAA,CAACN,GAAG;UAAmByB,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAZ,QAAA,eAC/CV,OAAA,CAACL,OAAO;YAACuB,OAAO,EAAEA;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC,GADtBI,OAAO,CAACK,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACJ;EACH,gBAED,CAAC;AAEP,CAAC;AAAAV,EAAA,CA5BKD,oBAAoB;EAAA,QACqBL,mBAAmB;AAAA;AAAA0B,EAAA,GAD5DrB,oBAAoB;AA8B1B,eAAeA,oBAAoB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}